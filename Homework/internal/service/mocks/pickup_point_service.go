// Code generated by MockGen. DO NOT EDIT.
// Source: ./pickup_point_service.go

// Package mocks_pickup_point_service is a generated GoMock package.
package mocks_pickup_point_service

import (
	model "Homework/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockpickupPointStorage is a mock of pickupPointStorage interface.
type MockpickupPointStorage struct {
	ctrl     *gomock.Controller
	recorder *MockpickupPointStorageMockRecorder
}

// MockpickupPointStorageMockRecorder is the mock recorder for MockpickupPointStorage.
type MockpickupPointStorageMockRecorder struct {
	mock *MockpickupPointStorage
}

// NewMockpickupPointStorage creates a new mock instance.
func NewMockpickupPointStorage(ctrl *gomock.Controller) *MockpickupPointStorage {
	mock := &MockpickupPointStorage{ctrl: ctrl}
	mock.recorder = &MockpickupPointStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpickupPointStorage) EXPECT() *MockpickupPointStorageMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockpickupPointStorage) Get(name string) (model.PickupPoint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(model.PickupPoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockpickupPointStorageMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockpickupPointStorage)(nil).Get), name)
}

// List mocks base method.
func (m *MockpickupPointStorage) List() []model.PickupPoint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]model.PickupPoint)
	return ret0
}

// List indicates an expected call of List.
func (mr *MockpickupPointStorageMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockpickupPointStorage)(nil).List))
}

// Write mocks base method.
func (m *MockpickupPointStorage) Write(name, address, contactDetails string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Write", name, address, contactDetails)
}

// Write indicates an expected call of Write.
func (mr *MockpickupPointStorageMockRecorder) Write(name, address, contactDetails interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockpickupPointStorage)(nil).Write), name, address, contactDetails)
}
